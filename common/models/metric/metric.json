{
  "name": "Metric",
  "plural": "Metrics",
  "base": "PersistedModel",
  "idInjection": false,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "public",
      "table": "metric"
    }
  },
  "properties": {
    "id": {
      "type": "string",
      "id": true,
      "required": true,
      "defaultFn": "uuid"
    },
    "parentId": {
      "type": "string",
      "postgresql": {
        "columnName": "parent_id"
      }
    },
    "level": {
      "type": "number",
      "description": "0 - child, 1 - parent, 2 - grandparent, etc."
    },
    "name": {
      "type": "string",
      "required": true
    },
    "description": {
      "type": "string"
    },
    "displayName": {
      "type": "string",
      "postgresql": {
        "columnName": "display_name"
      }
    },
    "shortName": {
      "type": "string",
      "postgresql": {
        "columnName": "short_name"
      }
    },
    "unit": {
      "type": "string",
      "required": true,
      "description": "One of 'Days', 'Number', 'Currency', 'Percent', 'Integer'"
    },
    "unitLabel": {
      "type": "string",
      "postgresql": {
        "columnName": "unit_label"
      }
    },
    "aggregationType": {
      "type": "string",
      "description": "One of 'None', 'Sum', 'Product', 'Average'",
      "postgresql": {
        "columnName": "aggregation_type"
      }
    },
    "timeRange": {
      "type": "string",
      "description": "One of 'None', 'Daily', 'Monthly', 'Yearly'",
      "postgresql": {
        "columnName": "time_range"
      }
    },
    "modelName": {
      "type": "string",
      "postgresql": {
        "columnName": "model_name"
      }
    },
    "sourceModelName": {
      "type": "string",
      "postgresql": {
        "columnName": "source_model_name"
      }
    },
    "adHoc": {
      "type": "boolean",
      "default": false,
      "postgresql": {
        "columnName": "ad_hoc"
      }
    },
    "filterByModelName": {
      "type": "string",
      "postgresql": {
        "columnName": "filter_by_model_name"
      }
    }
  },
  "validations": [],
  "relations": {
    "metricData": {
      "type": "hasMany",
      "model": "MetricData",
      "foreignKey": "metricId"
    }
  },
  "acls": [],
  "methods": {}
}  